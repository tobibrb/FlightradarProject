language: java
jdk:
  - oraclejdk8
services:
  - docker
before_install:
  - chmod +x gradlew
  - echo -e "[dynamodb]\naws_access_key_id = $AWS_DYNAMO_ACCESS_KEY\naws_secret_access_key = $AWS_DYNAMO_SECRET_KEY" > $(dirname $0)/credentials
  - echo -e "[email]\naws_access_key_id = $AWS_MAIL_ACCESS_KEY\naws_secret_access_key = $AWS_MAIL_SECRET_KEY" >> $(dirname $0)/credentials
  - echo -e "[s3]\naws_access_key_id = $AWS_S3_ACCESS_KEY\naws_secret_access_key = $AWS_S3_SECRET_KEY" >> $(dirname $0)/credentials
  - export AWS_CREDENTIAL_PROFILES_FILE=$(dirname $0)/credentials
after_success:
  - echo -e "[dynamodb]\naws_access_key_id = $AWS_DYNAMO_ACCESS_KEY\naws_secret_access_key = $AWS_DYNAMO_SECRET_KEY" > build/libs/credentials
  - echo -e "[email]\naws_access_key_id = $AWS_MAIL_ACCESS_KEY\naws_secret_access_key = $AWS_MAIL_SECRET_KEY" >> build/libs/credentials
  - echo -e "[s3]\naws_access_key_id = $AWS_S3_ACCESS_KEY\naws_secret_access_key = $AWS_S3_SECRET_KEY" >> build/libs/credentials
  - docker build -t cronjoe/flightradar .
  - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  - docker push cronjoe/flightradar

# deploy:
#   provider: s3
#   access_key_id: "$AWS_ACCESS_KEY"
#   secret_access_key: "$AWS_SECRET_KEY"
#   bucket: "fhb-flight"
#   skip_cleanup: true
#   local_dir: build/libs

#deploy:
#  provider: releases
#  api_key: "$OAUTH_TOKEN"
#  file: "build/libs/flightdemo-1.0-SNAPSHOT.jar"
#  skip_cleanup: true
#  on:
#    tags: true
